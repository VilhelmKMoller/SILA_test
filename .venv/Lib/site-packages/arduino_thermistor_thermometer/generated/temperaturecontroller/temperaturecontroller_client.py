# Generated by sila2.code_generator; sila2.__version__: 0.12.2
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:

    from typing import Iterable, Optional

    from sila2.client import (
        ClientMetadataInstance,
        ClientObservableCommandInstance,
        ClientObservableProperty,
        ClientUnobservableProperty,
    )
    from temperaturecontroller_types import ControlTemperature_Responses


class TemperatureControllerClient:
    """

    This is a simple example of a generic Feature for controlling and retrieving the temperature.
    A new target temperature can be set anytime with the 'Control Temperature' Command.
    The temperature range has been limited to prevent major damages of a device.
    In case the first target temperature has not been reached, a ControlInterrupted Error should be thrown.

    """

    Metadata: ClientUnobservableProperty[str]
    """
    Additional information about the temperature metadata, e.g. units, range, etc. as JSON-LD context .
    """

    CurrentTemperature: ClientObservableProperty[float]
    """
    The current temperature as measured by the controller.
    """

    TargetTemperature: ClientObservableProperty[float]
    """
    The actual target temperature as set by the ControlTemperature command.
    """

    CurrentTemperatureJSONLD: ClientObservableProperty[str]
    """
    The current temperature as measured by the controller in JSON-LD format.
    """

    TargetTemperatureJSONLD: ClientObservableProperty[str]
    """
    The target temperature as set by the ControlTemperature command in JSON-LD format.
    """

    def ControlTemperature(
        self, TargetTemperature: float, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> ClientObservableCommandInstance[ControlTemperature_Responses]:
        """

        Control the temperature gradually to a set target.
        It is RECOMMENDED to use an oscillation free control system.

        """
        ...
