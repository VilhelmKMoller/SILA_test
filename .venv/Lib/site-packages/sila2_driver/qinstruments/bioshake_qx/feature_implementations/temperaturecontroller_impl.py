# Generated by sila2.code_generator; sila2.__version__: 0.9.2
from __future__ import annotations

import logging
from time import sleep, time
from typing import TYPE_CHECKING

from sila2.framework import CommandExecutionStatus
from sila2.framework.errors.undefined_execution_error import UndefinedExecutionError
from sila2.server import MetadataDict, ObservableCommandInstanceWithIntermediateResponses

from ..api.bioshake import BioShakeCom
from ..generated.temperaturecontroller import (
    DisableTemperatureControl_Responses,
    EnableTemperatureControl_IntermediateResponses,
    EnableTemperatureControl_Responses,
    TemperatureControllerBase,
)
from ..generated.temperaturecontroller.temperaturecontroller_errors import TimeoutError

if TYPE_CHECKING:
    from ..server import Server

logger = logging.getLogger(__name__)


class TemperatureControllerImpl(TemperatureControllerBase):
    def __init__(self, parent_server: Server) -> None:
        self.settings = None
        super().__init__(parent_server=parent_server)

    def DisableTemperatureControl(self, *, metadata: MetadataDict) -> DisableTemperatureControl_Responses:
        try:
            with BioShakeCom(self.settings.PortName) as com:
                com.SetTemperatureControlOff()
            return DisableTemperatureControl_Responses()
        except Exception as ex:
            logger.exception(ex)
            raise UndefinedExecutionError(repr(ex))

    def EnableTemperatureControl(
        self,
        TargetTemperature: float,
        Timeout: int,
        *,
        metadata: MetadataDict,
        instance: ObservableCommandInstanceWithIntermediateResponses[EnableTemperatureControl_IntermediateResponses],
    ) -> EnableTemperatureControl_Responses:
        try:
            with BioShakeCom(self.settings.PortName) as com:
                com.SetTargetTemperature(TargetTemperature)
                com.SetTemperatureControlOn()

                instance.status = CommandExecutionStatus.running

                start = time()
                while time() - Timeout < start:
                    T = com.GetTemperature()
                    if (T - TargetTemperature) < 0.5:
                        return EnableTemperatureControl_Responses()
                    instance.send_intermediate_response(EnableTemperatureControl_IntermediateResponses(T))
                    sleep(1.0)

                com.SetTemperatureControlOff()
                raise TimeoutError()
        except TimeoutError as ex:
            logger.exception(ex)
            raise ex
        except Exception as ex:
            logger.exception(ex)
            raise UndefinedExecutionError(repr(ex))
