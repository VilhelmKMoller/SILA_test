# Generated by sila2.code_generator; sila2.__version__: 0.12.2
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING

from sila2.server import FeatureImplementationBase, MetadataDict

from .connectioninfoprovider_types import SetOutputFormat_Responses

if TYPE_CHECKING:

    from ...server import Server


class ConnectionInfoProviderBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """

        This SiLA feature provides detailed information about the connection aspects of a device, like IP address, port, serial ports etc.

        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def get_SemanticConnectionInfo(self, *, metadata: MetadataDict) -> str:
        """

            Detailed Information about the Device Connection in a RDF serialisation format like JSON-LD.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Detailed Information about the Device Connection in a RDF serialisation format like JSON-LD.

        """

    @abstractmethod
    def SetOutputFormat(self, OutputFormat: str, *, metadata: MetadataDict) -> SetOutputFormat_Responses:
        """

            Set the output format of the device information, like TEXT, JSON-LD, XML, etc.
            The recommended default output format is JSON-LD, which allows to provide detailed information about the device in a structured way with semantic annotations / context, referencing to defined vocabularies.



        :param OutputFormat:
                Output format of the device information.


        :param metadata: The SiLA Client Metadata attached to the call

        """
